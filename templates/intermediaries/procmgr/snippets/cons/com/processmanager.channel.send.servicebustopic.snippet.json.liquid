{%- capture workflow_object_name -%}{{ workflow_object.name | replace: " ", "_" | replace: ".", "_" | replace: "'", "_" }}_({{ workflow_object.properties.UniqueId }}){%- endcapture -%}
{%- assign message_properties = workflow_object.properties.messageProperties -%}
{%- assign message_properties_size = message_properties | size -%}
{%- assign request_message_properties = workflow_object.properties.requestMessageProperties -%}
{%- assign request_message_properties_size = request_message_properties | size -%}
{%- for channel in messaging_object.workflow_model.channels -%}
    {%- if channel.key == workflow_object.properties.WorkflowChannel -%}
        {%- if channel.direction == "Send" or channel.direction == "FireForget" or channel.direction == "RequestReply" -%}
            {%- assign is_request = true -%}
        {%- else -%}
            {%- assign is_request = false -%}
            {%- assign request_message = channel.messages_in | first -%}
        {%- endif -%}
        {%- assign routing_properties = channel.properties.routingProperties -%}
        {%- assign routing_properties_size = routing_properties | size -%}
    {%- endif -%}
{%- endfor -%}
{
    "workflowDefinitionAction": {
        "{{ workflow_object.type }}:_{{ workflow_object_name }}": {
            "runAfter": {},
            "type": "Scope",
            "description": "{{ workflow_object.type }}",
            "actions": {
{%- if message_properties_size > 0 %}
                "{{ workflow_object_name }}:Set_Header_Properties": {
                    "runAfter": {},
                    "type": "Scope",
                    "description": "{{ workflow_object.type }}",
                    "actions": {
    {%- for property in message_properties %}
                        "{{ workflow_object_name }}:Compose_Header_{{ property.key }}": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "@setProperty(variables('{{ workflow_object.properties.MessageName }}'), 'header', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header'], 'properties', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header']?['properties'], '{{ property.key }}', '{{ property.value | to_json_string }}')))"
                        },
                        "{{ workflow_object_name }}:Set_Header_{{ property.key }}": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                                "name": "{{ workflow_object.properties.MessageName }}",
                                "value": "@outputs('{{ workflow_object_name }}:Compose_Header_{{ property.key }}')"
                            }
                        }{%- if forloop.last == false -%},{%- endif -%}
    {%- endfor %}
                    }
                },
{%- endif %}
{%- if request_message_properties_size > 0 %}
                "{{ workflow_object_name }}:Copy_Header_Properties": {
                    "runAfter": {},
                    "type": "Scope",
                    "description": "{{ workflow_object.type }}",
                    "actions": {
    {%- for property in request_message_properties %}
                        "{{ workflow_object_name }}:Get_Header_{{ property.value }}": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "@setProperty(variables('{{ workflow_object.properties.MessageName }}'), 'header', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header'], 'properties', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header']?['properties'], '{{ property.key }}', variables('{{ request_message.name }}')?['header']?['properties']?['{{ property.value | to_json_string }}'])))"
                        },
                        "{{ workflow_object_name }}:Copy_Header_{{ property.value }}": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                                "name": "{{ workflow_object.properties.MessageName }}",
                                "value": "@outputs('{{ workflow_object_name }}:Get_Header_{{ property.value }}')"
                            }
                        }{%- if forloop.last == false -%},{%- endif -%}
    {%- endfor %}
                    }
                },
{%- endif %}
{%- if routing_properties_size > 0 %}
                "{{ workflow_object_name }}:Set_Routing_Properties": {
                    "runAfter": {},
                    "type": "Scope",
                    "description": "{{ workflow_object.type }}",
                    "actions": {
    {%- for property in routing_properties %}
                        "{{ workflow_object_name }}:Compose_Routing_{{ property.key }}": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "@setProperty(variables('{{ workflow_object.properties.MessageName }}'), 'header', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header'], 'routing', setProperty(variables('{{ workflow_object.properties.MessageName }}')?['header']?['routing'], '{{ property.key }}', variables('{{ workflow_object.properties.MessageName }}')?['header']?['properties']?['{{ property.value | to_json_string }}'])))"
                        },
                        "{{ workflow_object_name }}:Set_Routing_{{ property.key }}": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                                "name": "{{ workflow_object.properties.MessageName }}",
                                "value": "@outputs('{{ workflow_object_name }}:Compose_Routing_{{ property.key }}')"
                            }
                        }{%- if forloop.last == false -%},{%- endif -%}
    {%- endfor %}
                    }
                },
{%- endif %}
                "{{ workflow_object_name }}:Publish_Message": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                        "body": {
                            "ContentData": "@{base64(variables('{{ workflow_object.properties.MessageName }}'))}",
                            "ContentType": "application/json",
                            "MessageId": "@coalesce(variables('{{ workflow_object.properties.MessageName }}')?['header']?['properties']?['messageId'], guid())",
                            "Properties": "@variables('{{ workflow_object.properties.MessageName }}')?['header']?['routing']",
                            "SessionId": "none"
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['servicebuspublish']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/@{encodeURIComponent(coalesce(parameters('serviceBusTopicName'), '(topic name not set)'))}/messages",
                        "queries": {
                            "systemProperties": "None"
                        }
                    }
                }
            }
        }
    }
}