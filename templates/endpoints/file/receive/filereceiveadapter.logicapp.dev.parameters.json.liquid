{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "value": "{{ resource_template.resource_name }}"
        },
        "messageBusResourceGroupName": {
            "value": "{{ resource_template.parameters.azure_message_bus_resource_group_name }}"
        },
        "systemApplicationResourceGroupName": {
            "value": "{{ resource_template.parameters.azure_system_resource_group_name }}"
        },
        "integrationAccountName": {
            "value": "{{ resource_template.parameters.azure_integration_account_name }}"
        },
        "messageConstructorLogicAppName": {
            "value": "{{ resource_template.parameters.azure_message_constructor_logic_app_name }}"
        },
        "messageSuspendProcessorLogicAppName": {
            "value": "{{ resource_template.parameters.azure_message_suspend_processor_logic_app_name }}"
        },
        "suspendQueueTopicName": {
            "value": "{{ resource_template.parameters.azure_service_bus_suspend_queue_topic_name }}"
        },
        "apimServiceName": {
            "value": "{{ resource_template.parameters.apim_service_name }}"
        },
        "fileSystemReceiveApiConnectionName": {
            "value": "{{ resource_template.parameters.filesystem_api_connector_name }}"
        },
        "fileReceiveFolder": {
            "value": "{{ resource_template.parameters.azure_file_target_folder }}"
        },
        "fileMaxFileCount": {
            "value": {{ resource_template.parameters.azure_file_max_file_count }}
        },
        "fileRecurrenceFrequency": {
            "value": "{{ resource_template.parameters.azure_file_frequency }}"
        },
        "fileRecurrenceInterval": {
            "value": {{ resource_template.parameters.azure_file_recurrence }}
        },
        "serviceBusTopicPublishApiConnectionName": {
            "value": "{{ resource_template.parameters.service_bus_api_connector_name }}"
        },
        "scenario": {
            "value": "{{ resource_template.parameters.scenario_name }}"
        },
        "tags": {
            "value": {
{%- for tag in resource_template.tags -%}
    {%- if forloop.last == false %}
                "{{ tag.key }}" : "{{ tag.value }}",
    {%- else %}
                "{{ tag.key }}" : "{{ tag.value }}"
    {%- endif -%}
{%- endfor %}
            }
        }
    }
}